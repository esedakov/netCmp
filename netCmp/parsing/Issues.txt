Issue 1 (2015-11-29): change declaration of inheritance functions:
	Reason: to draw CFG using jointJS, one needs to create a viewport (i.e. run
	'new joint.dia.Paper({...})' command). But js crashes with a following error:
	>>> Uncaught TypeError: undefined is not a function (jquery-1.11.3.min.js:4).
	Emperically, I determined that this error has to do with my util__lib.js file
	which had 3 functions for related to establishing inheritance (inheritFrom,
	ctorParent, and hashCode). They all were declared inside Object scope. For
	example: Object.prototype.inheritFrom = function(parentClass){...};
	When I converted this declaration into a regular function, so it is no longer
	accessible in every JS object, jointJS was able to construct viewport.
---------------------------------------------------------------------------------
Issue 2 (2015-12-12): remove empty hashmap token (i.e. '{}') because it makes parsing
	unnecessarily complicating when it analyzes function or type definitions. With
	this token in place, parser has check if it is '{' or  '{}' which is an extra
	comparison. So instead remove it. Leave for now empty array (i.e. '[]'), but may
	be later it will be removed as well.
----------------------------------------------------------------------------------
Issue 3 (2016-07-28): need to handle sup-expression case in the access rule (i.e. the
	rule that processes data or method access).
	Note: sup-expression case refers to the fact that call to PROCESS__FACTOR (above)
		may process not only identifier before the function name (a.k.a. id.func)
		but also an expression before function name (a.k.a. (exp).func). If it is
		either identifier or sup-expression then we need to pass this condition and
		try to check for the function name that follows.